{"version":3,"sources":["data/data.js","D3/BarChart.js","D3/LineGraph.js","App.js","index.js"],"names":["mockdata","M1","H1","D","BarChart","objdata","datahold","yaxis_index","data_type","data","tm","time","tm_lable","prepareData","svg","d3","html","append","attr","margin","top","bottom","left","right","chart","width","height","diff","Math","abs","xScale","domain","map","d","timeConverter","range","yScale","colorScale","div","style","UNIX_timestamp","a","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","selectAll","enter","classed","bandwidth","i","on","event","console","log","transition","duration","clientX","clientY","text","xAxis","scale","call","yAxis","ticks","select","tickSize","tickFormat","plot","drawChart","useEffect","graph","id","LineGraph","LineChart","lineData","push","x","y","round","random","line","dt","remove","datum","class","App","useState","setObjdata","UpdateData","UpdateGraph","UpdateTime","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"4OAuPeA,EAtPE,CACbC,GAAI,CAAC,CACG,WACA,IACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,IACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,IACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,IACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,IACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,IACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,IACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,SACA,IACA,EACA,EACA,EACA,KACA,MACA,MACA,KAERC,GAAK,CAAC,CACF,WACA,GACA,EACA,EACA,EACA,IACA,MACA,MACA,IACF,CACE,WACA,GACA,EACA,EACA,EACA,IACA,MACA,MACA,IACF,CACE,WACA,GACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,GACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,GACA,EACA,EACA,EACA,IACA,MACA,MACA,IACF,CACE,WACA,GACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,GACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,GACA,EACA,EACA,EACA,KACA,MACA,MACA,KAEJC,EAAI,CAAC,CACD,WACA,GACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,GACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,GACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,GACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,GACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,GACA,EACA,EACA,EACA,KACA,MACA,MACA,IACF,CACE,WACA,GACA,EACA,EACA,EACA,KACA,MACA,MACA,IAC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","file":"static/js/main.0c86bebe.chunk.js","sourcesContent":["// Mock Data to be imported\nconst mockdata = {\n    M1: [[\n            1637089200, // Unix timestamp\n            120, // number of successful requests (2xx)\n            0, // number of rejected requests (4xx)\n            0, // number of rate limited requests (429)\n            0, // number of failed requests (5xx)\n            0.011, // median API latency\n            1.023, // 99th percentile API latency\n            25536, // data traffic in bytes\n            52 // number of unique users in time-frame\n        ],[\n            1637089300, // Unix timestamp\n            121, // number of successful requests (2xx)\n            0, // number of rejected requests (4xx)\n            0, // number of rate limited requests (429)\n            0, // number of failed requests (5xx)\n            0.016, // median API latency\n            1.023, // 99th percentile API latency\n            75536, // data traffic in bytes\n            22 // number of unique users in time-frame\n        ],[\n            1637089400, // Unix timestamp\n            122, // number of successful requests (2xx)\n            0, // number of rejected requests (4xx)\n            0, // number of rate limited requests (429)\n            0, // number of failed requests (5xx)\n            0.013, // median API latency\n            1.023, // 99th percentile API latency\n            75536, // data traffic in bytes\n            42 // number of unique users in time-frame\n        ],[\n            1637089600, // Unix timestamp\n            123, // number of successful requests (2xx)\n            0, // number of rejected requests (4xx)\n            0, // number of rate limited requests (429)\n            0, // number of failed requests (5xx)\n            0.012, // median API latency\n            1.023, // 99th percentile API latency\n            25536, // data traffic in bytes\n            62 // number of unique users in time-frame\n        ],[\n            1637089700, // Unix timestamp\n            124, // number of successful requests (2xx)\n            0, // number of rejected requests (4xx)\n            0, // number of rate limited requests (429)\n            0, // number of failed requests (5xx)\n            0.017, // median API latency\n            1.023, // 99th percentile API latency\n            45536, // data traffic in bytes\n            72 // number of unique users in time-frame\n        ],[\n            1637089800, // Unix timestamp\n            125, // number of successful requests (2xx)\n            0, // number of rejected requests (4xx)\n            0, // number of rate limited requests (429)\n            0, // number of failed requests (5xx)\n            0.013, // median API latency\n            1.023, // 99th percentile API latency\n            55536, // data traffic in bytes\n            32 // number of unique users in time-frame\n        ],[\n            1637089900, // Unix timestamp\n            126, // number of successful requests (2xx)\n            0, // number of rejected requests (4xx)\n            0, // number of rate limited requests (429)\n            0, // number of failed requests (5xx)\n            0.018, // median API latency\n            1.023, // 99th percentile API latency\n            75536, // data traffic in bytes\n            52 // number of unique users in time-frame\n        ],[\n            1637090000, // Unix timestamp\n            127, // number of successful requests (2xx)\n            0, // number of rejected requests (4xx)\n            0, // number of rate limited requests (429)\n            0, // number of failed requests (5xx)\n            0.013, // median API latency\n            1.023, // 99th percentile API latency\n            35536, // data traffic in bytes\n            62 // number of unique users in time-frame\n        ]],\n    H1:  [[\n        1637189200, // Unix timestamp\n        20, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.010, // median API latency\n        1.023, // 99th percentile API latency\n        75536, // data traffic in bytes\n        42 // number of unique users in time-frame\n    ],[\n        1637289200, // Unix timestamp\n        21, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.05, // median API latency\n        1.023, // 99th percentile API latency\n        85536, // data traffic in bytes\n        62 // number of unique users in time-frame\n    ],[\n        1637389200, // Unix timestamp\n        18, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.018, // median API latency\n        1.023, // 99th percentile API latency\n        35536, // data traffic in bytes\n        62 // number of unique users in time-frame\n    ],[\n        1637489200, // Unix timestamp\n        22, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.013, // median API latency\n        1.023, // 99th percentile API latency\n        65536, // data traffic in bytes\n        72 // number of unique users in time-frame\n    ],[\n        1637589200, // Unix timestamp\n        17, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.010, // median API latency\n        1.023, // 99th percentile API latency\n        75536, // data traffic in bytes\n        32 // number of unique users in time-frame\n    ],[\n        1637689200, // Unix timestamp\n        24, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.018, // median API latency\n        1.023, // 99th percentile API latency\n        35536, // data traffic in bytes\n        62 // number of unique users in time-frame\n    ],[\n        1637789200, // Unix timestamp\n        18, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.012, // median API latency\n        1.023, // 99th percentile API latency\n        55536, // data traffic in bytes\n        32 // number of unique users in time-frame\n    ],[\n        1637889200, // Unix timestamp\n        19, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.016, // median API latency\n        1.023, // 99th percentile API latency\n        25536, // data traffic in bytes\n        72 // number of unique users in time-frame\n        ]],\n    D:  [[\n        1637089200, // Unix timestamp\n        45, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.013, // median API latency\n        1.023, // 99th percentile API latency\n        65536, // data traffic in bytes\n        72 // number of unique users in time-frame\n    ],[\n        2637089200, // Unix timestamp\n        20, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.018, // median API latency\n        1.023, // 99th percentile API latency\n        75536, // data traffic in bytes\n        82 // number of unique users in time-frame\n    ],[\n        3637089200, // Unix timestamp\n        55, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.011, // median API latency\n        1.023, // 99th percentile API latency\n        35536, // data traffic in bytes\n        32 // number of unique users in time-frame\n    ],[\n        4637089200, // Unix timestamp\n        30, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.016, // median API latency\n        1.023, // 99th percentile API latency\n        75536, // data traffic in bytes\n        72 // number of unique users in time-frame\n    ],[\n        5637089200, // Unix timestamp\n        50, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.012, // median API latency\n        1.023, // 99th percentile API latency\n        45536, // data traffic in bytes\n        42 // number of unique users in time-frame\n    ],[\n        6637089200, // Unix timestamp\n        20, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.019, // median API latency\n        1.023, // 99th percentile API latency\n        75536, // data traffic in bytes\n        62 // number of unique users in time-frame\n    ],[\n        7637089200, // Unix timestamp\n        35, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.011, // median API latency\n        1.023, // 99th percentile API latency\n        35536, // data traffic in bytes\n        32 // number of unique users in time-frame\n    ],[\n        8637089200, // Unix timestamp\n        40, // number of successful requests (2xx)\n        0, // number of rejected requests (4xx)\n        0, // number of rate limited requests (429)\n        0, // number of failed requests (5xx)\n        0.013, // median API latency\n        1.023, // 99th percentile API latency\n        55536, // data traffic in bytes\n        82 // number of unique users in time-frame\n        ]]\n}                                    \n\nexport default mockdata;","import React, { useEffect } from 'react';\r\nimport * as d3 from  'd3';\r\nimport mockdata from '../data/data';\r\n\r\n\r\nexport default function BarChart({ objdata }) {\r\n\r\n    var datahold = mockdata.M1;\r\n    var yaxis_index = 1;\r\n    var data_type = objdata.data;\r\n    var tm = objdata.time;\r\n    var tm_lable = tm;\r\n\r\n \r\n    // Prepares data corresponding to user's selected options\r\n    function prepareData() {\r\n\r\n        yaxis_index = (data_type === \"Requests\") ? 1 \r\n            :(data_type === \"Latency\") ? 5\r\n            :(data_type === \"Trafic\") ? 7\r\n            :(data_type === \"Users\") ? 8\r\n            :1;\r\n\r\n        datahold = (tm === \"M1\") ? mockdata.M1 \r\n            :(tm === \"H1\") ? mockdata.H1 \r\n            :(tm === \"D\") ? mockdata.D\r\n            :mockdata.M1;\r\n\r\n        tm_lable = (tm === \"M1\") ? 'Minute Time Frame' \r\n            :(tm === \"H1\") ? 'Hourly Time Frame' \r\n            :(tm === \"D\") ? 'Daily Time Frame'  \r\n            :'Minute Time Frame';\r\n\r\n        drawChart();\r\n    }\r\n\r\n    // Set Chart parameters and Options\r\n    function drawChart() {\r\n        const width = 1000;\r\n        const height = 450;\r\n\r\n        const svg = d3.select('#BarChart')\r\n            .html('')\r\n            .append('svg')\r\n            .attr('id', 'chart')\r\n            .attr('width', width)\r\n            .attr('height', height);\r\n\r\n        const margin = {\r\n            top: 60,\r\n            bottom: 100,\r\n            left: 80,\r\n            right: 40\r\n        };\r\n\r\n        const chart = svg.append('g')\r\n            .classed('display', true)\r\n            .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n        const chartWidth = width - margin.left - margin.right;\r\n        const chartHeight = height - margin.top - margin.bottom\r\n        plot(chart, chartWidth, chartHeight);\r\n\r\n    }\r\n\r\n    //   Plot Bar Chart\r\n    function plot(chart, width, height) {\r\n        \r\n        var data = datahold;\r\n        var diff = Math.abs(data[0][yaxis_index] - data[1][yaxis_index]);\r\n\r\n        // create scales!\r\n        const xScale = d3.scaleBand()\r\n            .domain(data.map(d => timeConverter(d[0])))\r\n            .range([0, width]);\r\n        const yScale = d3.scaleLinear()\r\n            .domain([(d3.min(data, d => d[yaxis_index]) - diff), d3.max(data, d => d[yaxis_index])])\r\n            .range([height, 0]);\r\n        const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n        // Define the div for the tooltip\r\n        var div = d3.select(\"body\").append(\"div\")\t\r\n        .attr(\"class\", \"tooltip\")\t\t\t\t\r\n        .style(\"opacity\", 0);\r\n\r\n        chart.selectAll('.bar')\r\n            .data(data)\r\n            .enter()\r\n            .append('rect')\r\n            .classed('bar', true)\r\n            .attr('x', d => (xScale(timeConverter(d[0])) + 25 ))\r\n            .attr('y', d => yScale(d[yaxis_index]))\r\n            .attr('height', d => (height - yScale(d[yaxis_index])))\r\n            .attr('width', d => xScale.bandwidth())\r\n            .style('fill', (d, i) => colorScale(i))\r\n            .on(\"mouseover\", function(event, d) {\t\r\n                console.log(xScale(timeConverter(d[0])));\t\r\n                console.log(d);\t\r\n                div.transition()\t\t\r\n                    .duration(200)\t\t\r\n                    .style(\"opacity\", .9);\t\t\r\n                div\t.html(\"<p>\"+ timeConverter(d[0]) +\" against \"+ d[yaxis_index] +\"</p>\")\t\r\n                    .style(\"left\",  event.clientX + \"px\")\t\t\r\n                    .style(\"top\", event.clientY + \"px\");\t\r\n                })\t\t\t\t\t\r\n            .on(\"mouseout\", function(d) {\t\t\r\n                div.transition()\t\t\r\n                    .duration(500)\t\t\r\n                    .style(\"opacity\", 0);\t\r\n            });\r\n\r\n            function timeConverter(UNIX_timestamp){\r\n                var a = new Date(UNIX_timestamp * 1000);\r\n                var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n                var year = a.getFullYear();\r\n                var month = months[a.getMonth()];\r\n                var date = a.getDate();\r\n                var hour = a.getHours();\r\n                var min = a.getMinutes();\r\n                var sec = a.getSeconds();\r\n                var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n                return time;\r\n            }\r\n\r\n        chart.selectAll('.bar-label')\r\n            .data(data)\r\n            .enter()\r\n            .append('text')\r\n            .classed('bar-label', true)\r\n            .attr('x', d => xScale(timeConverter(d[0])) + xScale.bandwidth()/2)\r\n            .attr('dx', 0)\r\n            .attr('y', d => yScale(d[yaxis_index]))\r\n            .attr('dy', -6)\r\n            .text(d => d[yaxis_index]);\r\n\r\n        const xAxis = d3.axisBottom()\r\n            .scale(xScale);\r\n            \r\n        chart.append('g')\r\n            .classed('x axis', true)\r\n            .attr('transform', `translate(0,${height})`)\r\n            .call(xAxis);\r\n\r\n        const yAxis = d3.axisLeft()\r\n            .ticks(5)\r\n            .scale(yScale);\r\n\r\n        chart.append('g')\r\n            .classed('y axis', true)\r\n            .attr('transform', 'translate(0,0)')\r\n            .call(yAxis);\r\n\r\n        chart.select('.x.axis')\r\n            .append('text')\r\n            .attr('x',  width/2)\r\n            .attr('y', 60)\r\n            .attr('fill', '#000')\r\n            .style('font-size', '20px')\r\n            .style('text-anchor', 'middle')\r\n            .text(tm_lable);    \r\n            \r\n        chart.select('.y.axis')\r\n            .append('text')\r\n            .attr('x', 0)\r\n            .attr('y', 0)\r\n            .attr('transform', `translate(-50, ${height/2}) rotate(-90)`)\r\n            .attr('fill', '#000')\r\n            .style('font-size', '20px')\r\n            .style('text-anchor', 'middle')\r\n            .text(data_type);   \r\n            \r\n        const yGridlines = d3.axisLeft()\r\n            .scale(yScale)\r\n            .ticks(5)\r\n            .tickSize(-width,0,0)\r\n            .tickFormat('')\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        prepareData();\r\n    }, [objdata]);\r\n    \r\n\r\n    return(\r\n        <>\r\n\r\n            <div>\r\n                <br></br> {objdata.graph} Graph of <b>{objdata.data}</b> against <b>{objdata.time } time frame</b>\r\n            </div><br></br>\r\n\r\n            <div id=\"BarChart\"></div> \r\n        </>\r\n    )\r\n\r\n  }","import React, { useEffect } from 'react';\r\nimport * as d3 from  'd3';\r\nimport mockdata from '../data/data';\r\n\r\nexport default function LineGraph({ objdata }) {\r\n  \r\n  var datahold = mockdata.M1;\r\n  var yaxis_index = 1;\r\n  var data_type = objdata.data;\r\n  var tm = objdata.time;\r\n  var tm_lable = tm;\r\n\r\n\r\n  // Prepares data corresponding to user's selected options\r\n  function prepareData() {\r\n    \r\n\r\n    yaxis_index = (data_type === \"Requests\") ? 1 \r\n        :(data_type === \"Latency\") ? 5\r\n        :(data_type === \"Trafic\") ? 7\r\n        :(data_type === \"Users\") ? 8\r\n        :1;\r\n\r\n\r\n    datahold = (tm === \"M1\") ? mockdata.M1 \r\n        :(tm === \"H1\") ? mockdata.H1 \r\n        :(tm === \"D\") ? mockdata.D\r\n        :mockdata.M1;\r\n\r\n    tm_lable = (tm === \"M1\") ? 'Minute Time Frame' \r\n        :(tm === \"H1\") ? 'Hourly Time Frame' \r\n        :(tm === \"D\") ? 'Daily Time Frame'  \r\n        :'Minute Time Frame';\r\n\r\n        \r\n    LineChart();\r\n  }\r\n\r\n\r\n  //   Plot Line Chart\r\n  async function LineChart() {\r\n\r\n      var data = datahold;\r\n      var diff = Math.abs(data[0][yaxis_index] - data[1][yaxis_index]);\r\n\r\n\r\n      // Generate random data for our line where x is [0,15) and y is between 0 and 100\r\n      let lineData = []\r\n      for(let i = 0; i < 15; i++) {\r\n          lineData.push({x: i + 1, y: Math.round(Math.random() * 100)})\r\n      }\r\n\r\n      const width = 1000;\r\n      const height = 300;\r\n\r\n      // Create our scales to map our data values(domain) to coordinate values(range)\r\n      let xScale = d3.scaleBand()\r\n        .domain(data.map(d => timeConverter(d[0])))\r\n        .range([0, width]);\r\n        \r\n      let yScale = d3.scaleLinear()\r\n        .domain([d3.min(data, d => d[yaxis_index]) - diff, d3.max(data, d => d[yaxis_index])])\r\n        .range([height, 0]);\r\n\r\n      // Generate a path with D3 based on the scaled data values\r\n      let line = d3.line()\r\n        .x(dt => (xScale(timeConverter(dt[0])) + 63))\r\n        .y(dt => yScale(dt[yaxis_index]))\r\n      \r\n      // Generate the x and y Axis based on these scales\r\n      let xAxis = d3.axisBottom(xScale)\r\n      let yAxis = d3.axisLeft(yScale)\r\n\r\n      d3.select('#LineChart').selectAll(\"g\").remove()\r\n      \r\n      // Create the horizontal base line\r\n      d3.select('#LineChart').selectAll('path').datum(data) // Bind our data to the path element\r\n      .attr('d', d3.line().x(dt => (xScale(timeConverter(dt[0])) + 63)) // Set the path to our line function, but where x is the corresponding x\r\n      .y(yScale(0))).attr(\"stroke\", \"blue\").attr('fill', 'none') // Set the y to always be 0 and set stroke and fill color\r\n      .style('font-size', '20px')\r\n      \r\n      // Define the div for the tooltip\r\n      var div = d3.select(\"body\").append(\"div\")\t\r\n      .attr(\"class\", \"tooltip\")\t\t\t\t\r\n      .style(\"opacity\", 0);\r\n      \r\n      d3.select('#LineChart').selectAll(\"circle\").remove()\r\n      // Add the scatterplot\r\n      d3.select('#LineChart').selectAll(\"dot\")\t\r\n      .data(data)\t\t\t\r\n      .enter().append(\"circle\")\t\t\t\t\t\t\t\t\r\n      .attr(\"r\", 5)\t\t\r\n      .attr(\"cx\", function(dt) { return xScale(timeConverter(dt[0])) + 63 ; })\t\t \r\n      .attr(\"cy\", function(dt) { return yScale(dt[yaxis_index]); })\t\t\r\n      .on(\"mouseover\", function(event, dt) {\r\n          console.log(event);\r\n          div.transition()\t\t\r\n              .duration(200)\t\t\r\n              .style(\"opacity\", .9);\t\t\r\n          div\t.html(timeConverter(dt[0]) + \"<br/> by <br/>\"  + dt[yaxis_index])\t\r\n              .style(\"left\", event.clientX + \"px\")\t\t\r\n              .style(\"top\", event.clientY + \"px\");\t\r\n          })\t\t\t\t\t\r\n      .on(\"mouseout\", function(d) {\t\t\r\n          div.transition()\t\t\r\n              .duration(500)\t\t\r\n              .style(\"opacity\", 0);\t\r\n      });\r\n\r\n      function timeConverter(UNIX_timestamp){\r\n        var a = new Date(UNIX_timestamp * 1000);\r\n        var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n        var year = a.getFullYear();\r\n        var month = months[a.getMonth()];\r\n        var date = a.getDate();\r\n        var hour = a.getHours();\r\n        var min = a.getMinutes();\r\n        var sec = a.getSeconds();\r\n        var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n        return time;\r\n      }\r\n\r\n\r\n      d3.select('#LineChart').selectAll('path').transition().duration(1000) // Transition the line over 1 sec\r\n      .attr('d', line) // Set the path to our line variable (Which corresponds the actual path of the data)\r\n      \r\n      // Append the Axis to our LineChart svg\r\n      d3.select('#LineChart').append(\"g\")\r\n      .classed('x axis', true)\r\n      .attr(\"transform\", \"translate(0, 300)\").call(xAxis)\r\n\r\n      d3.select('#LineChart').append(\"g\")\r\n      .classed('y axis', true)\r\n      .attr(\"transform\", \"translate(0, 0)\").call(yAxis)\r\n\r\n      d3.select('#LineChart').select('.x.axis')\r\n        .append('text')\r\n        .attr('x',  width/2)\r\n        .attr('y', 60)\r\n        .attr('fill', '#000')\r\n        .style('font-size', '20px')\r\n        .style('text-anchor', 'middle')\r\n        .text(tm_lable);    \r\n        \r\n      d3.select('#LineChart').select('.y.axis')\r\n        .append('text')\r\n        .attr('x', 0)\r\n        .attr('y', 0)\r\n        .attr('transform', `translate(-50, ${height/2}) rotate(-90)`)\r\n        .attr('fill', '#000')\r\n        .style('font-size', '20px')\r\n        .style('text-anchor', 'middle')\r\n        .text(data_type);  \r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    prepareData();\r\n  }, [objdata]);\r\n\r\n\r\n  return(\r\n    <>\r\n      <div>\r\n        <br></br> {objdata.graph} Graph of <b>{objdata.data}</b> against <b>{objdata.time } time frame</b>\r\n      </div><br></br>\r\n      \r\n      <div class=\"linecontainer\"><svg id=\"LineChart\" width = {350} height = {350}><path/></svg> </div>\r\n      \r\n    </>\r\n  )\r\n  \r\n\r\n}","import React, { useState } from 'react';\nimport BarChart from \"./D3/BarChart\";\nimport LineGraph from \"./D3/LineGraph\";\n\nfunction App() {\n  // Holds values of the user's selected button option\n  const [objdata, setObjdata] = useState({data:\"Requests\", graph:\"Bar\", time:\"M1\"})\n\n\n  // Updates data type => Requests, Latency, Trafic, Users\n  function UpdateData (data) {\n    setObjdata({data:data, graph:objdata.graph, time:objdata.time});\n  }\n\n\n  // Updates Graph type => Line, Bar\n  function UpdateGraph (graph) {\n    setObjdata({data:objdata.data, graph:graph, time:objdata.time});\n  }\n\n\n  // Updates Time Frame => M1, H1, D\n  function UpdateTime (time) {\n    setObjdata({data:objdata.data, graph:objdata.graph, time:time});\n  }\n\n\n  return (\n    <>\n      \n      <section>\n        <h4 class=\"title\">Block Watch Graph</h4> <br></br>\n        <div class=\"container\">\n          <div class=\"card shadow mb-1 bg-white rounded\" >\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-sm-4\">\n                  <button type=\"button\" class=\"btn btn-outline-dark bt-mr\" onClick={() => UpdateData('Requests')}>Requests</button>\n                  <button type=\"button\" class=\"btn btn-outline-dark bt-mrl\" onClick={() => UpdateData('Latency')}>Latency</button>\n                  <button type=\"button\" class=\"btn btn-outline-dark bt-mrl\" onClick={() => UpdateData('Trafic')}>Trafic</button>\n                  <button type=\"button\" class=\"btn btn-outline-dark bt-ml\" onClick={() => UpdateData('Users')}>Users</button>\n                </div>\n                <div class=\"col-sm-3\"></div>\n                <div class=\"col-sm-2\">\n                  <button type=\"button\" class=\"btn btn-link bt-mrl\" onClick={() => UpdateGraph('Line')}>Line</button>\n                  <button type=\"button\" class=\"btn btn-link bt-mrl\" onClick={() => UpdateGraph('Bar')}>Bar</button>\n                </div>\n                <div class=\"col-sm-3\">\n                  <button type=\"button\" class=\"btn btn-link bt-mrl\" onClick={() => UpdateTime('M1')}>M1</button>\n                  <button type=\"button\" class=\"btn btn-link bt-mrl\" onClick={() => UpdateTime('H1')}>H1</button>\n                  <button type=\"button\" class=\"btn btn-link bt-ml\" onClick={() => UpdateTime('D')}>D</button>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                  {objdata.graph === 'Bar' && <BarChart objdata={objdata} /> }\n                  {objdata.graph === 'Line' && <LineGraph objdata={objdata} /> }\n                </div>\n              </div>\n              \n\n            </div>\n          </div>\n        </div>\n        \n      </section>\n\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}